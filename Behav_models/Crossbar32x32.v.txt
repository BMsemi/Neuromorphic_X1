// ------------------------------------------------------------
// Digital behavioral model of a 32x32 1T1R RRAM crossbar array
// For digital/functional simulation of memory
//
// - Each row shares WL and SL (horizontal selection)
// - Each column has a unique BL (vertical, readout)
// 
// Cell operation:
// - SET (write '1'): WL=1, SL=1 (voltage), BL=0 (grounded)
// - RESET (write '0'): WL=1, SL=0 (grounded), BL=1 (voltage)
// - READ: WL=1, SL=1, BL sensed by sense amp
//
// Note: Digital-only, does not model analog effects
// ------------------------------------------------------------

module rram_access_cell(WL, SL, BL);
    input WL;   // Word Line: selects the row
    input SL;   // Source Line: provides voltage or ground (row)
    inout BL;   // Bit Line: sense or write voltage (column)

    reg memory_state; // 1: SET (ON), 0: RESET (OFF)

    // During read, if selected and ON, SL pulls BL low; else high-Z
    assign BL = (WL && memory_state) ? SL : 1'bz;

    always @(posedge WL) begin
        // SET: SL=1, BL=0; RESET: SL=0, BL=1 (on selected row/col)
        if (SL && (BL === 1'b0))
            memory_state <= 1'b1;      // SET
        else if (!SL && (BL === 1'b1))
            memory_state <= 1'b0;      // RESET
    end
endmodule

module crossbar32x32(WL, SL, BL);
    input [31:0] WL;
    input [31:0] SL;
    inout [31:0] BL;

    genvar i, j;
    generate
        for (i = 0; i < 32; i = i + 1) begin: rows
            for (j = 0; j < 32; j = j + 1) begin: cols
                rram_access_cell cell (
                    .WL(WL[i]),
                    .SL(SL[i]),
                    .BL(BL[j])
                );
            end
        end
    endgenerate
endmodule
