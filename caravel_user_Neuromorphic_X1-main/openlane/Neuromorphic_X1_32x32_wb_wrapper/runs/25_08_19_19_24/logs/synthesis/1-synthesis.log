
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.34 (git sha1 4a1b5599258, gcc 8.3.1 -fPIC -Os)

[TCL: yosys -import] Command name collision: found pre-existing command `cd' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `eval' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `exec' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `read' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `trace' -> skip.
Defining PnR

1. Executing Liberty frontend: /home/vboxuser/.volare/volare/sky130/versions/0fe599b2afb6708d281543108caf8310912f54af/sky130A/libs.ref/sky130_fd_sc_hd/lib/sky130_fd_sc_hd__tt_025C_1v80.lib
Imported 428 cell types from liberty file.

2. Executing Liberty frontend: /home/vboxuser/caravel_user_Neuromorphic_X1_32x32/openlane/Neuromorphic_X1_32x32_wb_wrapper/../../ip/Neuromorphic_X1_32x32/lib/ETM_AV_TC_RCTYPICAL.lib
Imported 1 cell types from liberty file.

3. Executing Verilog-2005 frontend: /home/vboxuser/caravel_user_Neuromorphic_X1_32x32/openlane/Neuromorphic_X1_32x32_wb_wrapper/../../ip/Neuromorphic_X1_32x32/hdl/NEUROMORPHIC_X1_stub.v
Parsing SystemVerilog input from `/home/vboxuser/caravel_user_Neuromorphic_X1_32x32/openlane/Neuromorphic_X1_32x32_wb_wrapper/../../ip/Neuromorphic_X1_32x32/hdl/NEUROMORPHIC_X1_stub.v' to AST representation.
Generating RTLIL representation for module `\NEUROMORPHIC_X1_macro'.
Successfully finished Verilog frontend.

4. Executing Verilog-2005 frontend: /home/vboxuser/caravel_user_Neuromorphic_X1_32x32/openlane/Neuromorphic_X1_32x32_wb_wrapper/../../ip/Neuromorphic_X1_32x32/hdl/NEUROMORPHIC_X1.v
Parsing SystemVerilog input from `/home/vboxuser/caravel_user_Neuromorphic_X1_32x32/openlane/Neuromorphic_X1_32x32_wb_wrapper/../../ip/Neuromorphic_X1_32x32/hdl/NEUROMORPHIC_X1.v' to AST representation.
Storing AST representation for module `$abstract\NEUROMORPHIC_X1'.
Successfully finished Verilog frontend.

5. Executing Verilog-2005 frontend: /home/vboxuser/caravel_user_Neuromorphic_X1_32x32/openlane/Neuromorphic_X1_32x32_wb_wrapper/../../ip/Neuromorphic_X1_32x32/hdl/controller/wishbone_slave_interface.v
Parsing SystemVerilog input from `/home/vboxuser/caravel_user_Neuromorphic_X1_32x32/openlane/Neuromorphic_X1_32x32_wb_wrapper/../../ip/Neuromorphic_X1_32x32/hdl/controller/wishbone_slave_interface.v' to AST representation.
Storing AST representation for module `$abstract\wishbone_slave_interface'.
Successfully finished Verilog frontend.

6. Executing Verilog-2005 frontend: /home/vboxuser/caravel_user_Neuromorphic_X1_32x32/openlane/Neuromorphic_X1_32x32_wb_wrapper/../../ip/Neuromorphic_X1_32x32/hdl/bus_wrapper/ReRAM_Wishbone_Interface.v
Parsing SystemVerilog input from `/home/vboxuser/caravel_user_Neuromorphic_X1_32x32/openlane/Neuromorphic_X1_32x32_wb_wrapper/../../ip/Neuromorphic_X1_32x32/hdl/bus_wrapper/ReRAM_Wishbone_Interface.v' to AST representation.
Storing AST representation for module `$abstract\ReRAM_Wishbone_Interface'.
Successfully finished Verilog frontend.

7. Executing HIERARCHY pass (managing design hierarchy).

8. Executing AST frontend in derive mode using pre-parsed AST for module `\ReRAM_Wishbone_Interface'.
Generating RTLIL representation for module `\ReRAM_Wishbone_Interface'.

8.1. Analyzing design hierarchy..
Top module:  \ReRAM_Wishbone_Interface

8.2. Executing AST frontend in derive mode using pre-parsed AST for module `\NEUROMORPHIC_X1'.
Generating RTLIL representation for module `\NEUROMORPHIC_X1'.

8.3. Executing AST frontend in derive mode using pre-parsed AST for module `\wishbone_slave_interface'.
Generating RTLIL representation for module `\wishbone_slave_interface'.

8.4. Analyzing design hierarchy..
Top module:  \ReRAM_Wishbone_Interface
Used module:     \NEUROMORPHIC_X1
Used module:     \wishbone_slave_interface

8.5. Analyzing design hierarchy..
Top module:  \ReRAM_Wishbone_Interface
Used module:     \NEUROMORPHIC_X1
Used module:     \wishbone_slave_interface
Removing unused module `$abstract\ReRAM_Wishbone_Interface'.
Removing unused module `$abstract\wishbone_slave_interface'.
Removing unused module `$abstract\NEUROMORPHIC_X1'.
Removed 3 unused modules.

9. Generating Graphviz representation of design.
Writing dot description to `/home/vboxuser/caravel_user_Neuromorphic_X1_32x32/openlane/Neuromorphic_X1_32x32_wb_wrapper/runs/25_08_19_19_24/tmp/synthesis/hierarchy.dot'.
Dumping module ReRAM_Wishbone_Interface to page 1.
Renaming module ReRAM_Wishbone_Interface to ReRAM_Wishbone_Interface.

10. Executing TRIBUF pass.

11. Executing HIERARCHY pass (managing design hierarchy).

11.1. Analyzing design hierarchy..
Top module:  \ReRAM_Wishbone_Interface
Used module:     \NEUROMORPHIC_X1
Used module:     \wishbone_slave_interface

11.2. Analyzing design hierarchy..
Top module:  \ReRAM_Wishbone_Interface
Used module:     \NEUROMORPHIC_X1
Used module:     \wishbone_slave_interface
Removed 0 unused modules.

12. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

13. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

14. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

15. Executing PROC_INIT pass (extract init attributes).

16. Executing PROC_ARST pass (detect async resets in processes).

17. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.

18. Executing PROC_MUX pass (convert decision trees to multiplexers).

19. Executing PROC_DLATCH pass (convert process syncs to latches).

20. Executing PROC_DFF pass (convert process syncs to FFs).

21. Executing PROC_MEMWR pass (convert process memory writes to cells).

22. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

23. Executing CHECK pass (checking for obvious problems).
Checking module ReRAM_Wishbone_Interface...
Checking module NEUROMORPHIC_X1...
Checking module wishbone_slave_interface...
Found and reported 0 problems.

24. Executing OPT_EXPR pass (perform const folding).
Optimizing module ReRAM_Wishbone_Interface.
Optimizing module NEUROMORPHIC_X1.
Optimizing module wishbone_slave_interface.

25. Executing FLATTEN pass (flatten design).
Deleting now unused module NEUROMORPHIC_X1.
Deleting now unused module wishbone_slave_interface.
<suppressed ~2 debug messages>

26. Executing OPT_EXPR pass (perform const folding).
Optimizing module ReRAM_Wishbone_Interface.

27. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ReRAM_Wishbone_Interface..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

28. Executing OPT pass (performing simple optimizations).

28.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module ReRAM_Wishbone_Interface.

28.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ReRAM_Wishbone_Interface'.
Removed a total of 0 cells.

28.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ReRAM_Wishbone_Interface..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

28.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ReRAM_Wishbone_Interface.
Performed a total of 0 changes.

28.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ReRAM_Wishbone_Interface'.
Removed a total of 0 cells.

28.6. Executing OPT_DFF pass (perform DFF optimizations).

28.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ReRAM_Wishbone_Interface..

28.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module ReRAM_Wishbone_Interface.

28.9. Finished OPT passes. (There is nothing left to do.)

29. Executing FSM pass (extract and optimize FSM).

29.1. Executing FSM_DETECT pass (finding FSMs in design).

29.2. Executing FSM_EXTRACT pass (extracting FSM from design).

29.3. Executing FSM_OPT pass (simple optimizations of FSMs).

29.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ReRAM_Wishbone_Interface..

29.5. Executing FSM_OPT pass (simple optimizations of FSMs).

29.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

29.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

29.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

30. Executing OPT pass (performing simple optimizations).

30.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module ReRAM_Wishbone_Interface.

30.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ReRAM_Wishbone_Interface'.
Removed a total of 0 cells.

30.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ReRAM_Wishbone_Interface..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

30.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ReRAM_Wishbone_Interface.
Performed a total of 0 changes.

30.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ReRAM_Wishbone_Interface'.
Removed a total of 0 cells.

30.6. Executing OPT_DFF pass (perform DFF optimizations).

30.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ReRAM_Wishbone_Interface..

30.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module ReRAM_Wishbone_Interface.

30.9. Finished OPT passes. (There is nothing left to do.)

31. Executing WREDUCE pass (reducing word size of cells).
Removed top 2 bits (of 4) from port B of cell ReRAM_Wishbone_Interface.$flatten\wishbone_if.$eq$/home/vboxuser/caravel_user_Neuromorphic_X1_32x32/openlane/Neuromorphic_X1_32x32_wb_wrapper/../../ip/Neuromorphic_X1_32x32/hdl/controller/wishbone_slave_interface.v:57$4 ($eq).
Removed top 2 bits (of 32) from port B of cell ReRAM_Wishbone_Interface.$flatten\wishbone_if.$eq$/home/vboxuser/caravel_user_Neuromorphic_X1_32x32/openlane/Neuromorphic_X1_32x32_wb_wrapper/../../ip/Neuromorphic_X1_32x32/hdl/controller/wishbone_slave_interface.v:57$2 ($eq).

32. Executing PEEPOPT pass (run peephole optimizers).

33. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ReRAM_Wishbone_Interface..

34. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module ReRAM_Wishbone_Interface:
  created 0 $alu and 0 $macc cells.

35. Executing SHARE pass (SAT-based resource sharing).

36. Executing OPT pass (performing simple optimizations).

36.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module ReRAM_Wishbone_Interface.

36.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ReRAM_Wishbone_Interface'.
Removed a total of 0 cells.

36.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ReRAM_Wishbone_Interface..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

36.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ReRAM_Wishbone_Interface.
Performed a total of 0 changes.

36.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ReRAM_Wishbone_Interface'.
Removed a total of 0 cells.

36.6. Executing OPT_DFF pass (perform DFF optimizations).

36.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ReRAM_Wishbone_Interface..

36.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module ReRAM_Wishbone_Interface.

36.9. Finished OPT passes. (There is nothing left to do.)

37. Executing MEMORY pass.

37.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

37.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

37.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

37.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

37.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

37.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ReRAM_Wishbone_Interface..

37.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

37.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

37.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ReRAM_Wishbone_Interface..

37.10. Executing MEMORY_COLLECT pass (generating $mem cells).

38. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ReRAM_Wishbone_Interface..

39. Executing OPT pass (performing simple optimizations).

39.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module ReRAM_Wishbone_Interface.

39.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ReRAM_Wishbone_Interface'.
Removed a total of 0 cells.

39.3. Executing OPT_DFF pass (perform DFF optimizations).

39.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ReRAM_Wishbone_Interface..

39.5. Finished fast OPT passes.

40. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

41. Executing OPT pass (performing simple optimizations).

41.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module ReRAM_Wishbone_Interface.

41.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ReRAM_Wishbone_Interface'.
Removed a total of 0 cells.

41.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ReRAM_Wishbone_Interface..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

41.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ReRAM_Wishbone_Interface.
Performed a total of 0 changes.

41.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ReRAM_Wishbone_Interface'.
Removed a total of 0 cells.

41.6. Executing OPT_SHARE pass.

41.7. Executing OPT_DFF pass (perform DFF optimizations).

41.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ReRAM_Wishbone_Interface..

41.9. Executing OPT_EXPR pass (perform const folding).
Optimizing module ReRAM_Wishbone_Interface.

41.10. Finished OPT passes. (There is nothing left to do.)

42. Executing TECHMAP pass (map to technology primitives).

42.1. Executing Verilog-2005 frontend: /build/bin/../share/yosys/techmap.v
Parsing Verilog input from `/build/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

42.2. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $logic_and.
Using extmapper simplemap for cells of type $eq.
No more expansions possible.
<suppressed ~78 debug messages>

43. Executing OPT pass (performing simple optimizations).

43.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module ReRAM_Wishbone_Interface.
<suppressed ~36 debug messages>

43.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ReRAM_Wishbone_Interface'.
Removed a total of 0 cells.

43.3. Executing OPT_DFF pass (perform DFF optimizations).

43.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ReRAM_Wishbone_Interface..
Removed 0 unused cells and 4 unused wires.
<suppressed ~1 debug messages>

43.5. Finished fast OPT passes.

44. Executing ABC pass (technology mapping using ABC).

44.1. Extracting gate netlist of module `\ReRAM_Wishbone_Interface' to `<abc-temp-dir>/input.blif'..
Extracted 44 gates and 82 wires to a netlist network with 38 inputs and 1 outputs.

44.1.1. Executing ABC.
Running ABC command: "<yosys-exe-dir>/yosys-abc" -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

44.1.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        1
ABC RESULTS:              NAND cells:        2
ABC RESULTS:             ORNOT cells:        1
ABC RESULTS:                OR cells:       31
ABC RESULTS:            ANDNOT cells:        2
ABC RESULTS:        internal signals:       43
ABC RESULTS:           input signals:       38
ABC RESULTS:          output signals:        1
Removing temp directory.

45. Executing OPT pass (performing simple optimizations).

45.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module ReRAM_Wishbone_Interface.

45.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ReRAM_Wishbone_Interface'.
Removed a total of 0 cells.

45.3. Executing OPT_DFF pass (perform DFF optimizations).

45.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ReRAM_Wishbone_Interface..
Removed 0 unused cells and 55 unused wires.
<suppressed ~1 debug messages>

45.5. Finished fast OPT passes.

46. Executing HIERARCHY pass (managing design hierarchy).

46.1. Analyzing design hierarchy..
Top module:  \ReRAM_Wishbone_Interface

46.2. Analyzing design hierarchy..
Top module:  \ReRAM_Wishbone_Interface
Removed 0 unused modules.

47. Printing statistics.

=== ReRAM_Wishbone_Interface ===

   Number of wires:                123
   Number of wire bits:            603
   Number of public wires:          87
   Number of public wire bits:     567
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 38
     $_ANDNOT_                       2
     $_AND_                          1
     $_NAND_                         2
     $_ORNOT_                        1
     $_OR_                          31
     NEUROMORPHIC_X1_macro           1

48. Executing CHECK pass (checking for obvious problems).
Checking module ReRAM_Wishbone_Interface...
Found and reported 0 problems.

49. Generating Graphviz representation of design.
Writing dot description to `/home/vboxuser/caravel_user_Neuromorphic_X1_32x32/openlane/Neuromorphic_X1_32x32_wb_wrapper/runs/25_08_19_19_24/tmp/synthesis/post_techmap.dot'.
Dumping module ReRAM_Wishbone_Interface to page 1.

50. Executing SHARE pass (SAT-based resource sharing).

51. Executing OPT pass (performing simple optimizations).

51.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module ReRAM_Wishbone_Interface.

51.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ReRAM_Wishbone_Interface'.
Removed a total of 0 cells.

51.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ReRAM_Wishbone_Interface..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

51.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ReRAM_Wishbone_Interface.
Performed a total of 0 changes.

51.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ReRAM_Wishbone_Interface'.
Removed a total of 0 cells.

51.6. Executing OPT_DFF pass (perform DFF optimizations).

51.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ReRAM_Wishbone_Interface..

51.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module ReRAM_Wishbone_Interface.

51.9. Finished OPT passes. (There is nothing left to do.)

52. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ReRAM_Wishbone_Interface..
Removed 0 unused cells and 58 unused wires.
<suppressed ~58 debug messages>

53. Printing statistics.

=== ReRAM_Wishbone_Interface ===

   Number of wires:                 65
   Number of wire bits:            161
   Number of public wires:          29
   Number of public wire bits:     125
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 38
     $_ANDNOT_                       2
     $_AND_                          1
     $_NAND_                         2
     $_ORNOT_                        1
     $_OR_                          31
     NEUROMORPHIC_X1_macro           1

mapping tbuf

54. Executing TECHMAP pass (map to technology primitives).

54.1. Executing Verilog-2005 frontend: /home/vboxuser/.volare/volare/sky130/versions/0fe599b2afb6708d281543108caf8310912f54af/sky130A/libs.tech/openlane/sky130_fd_sc_hd/tribuff_map.v
Parsing Verilog input from `/home/vboxuser/.volare/volare/sky130/versions/0fe599b2afb6708d281543108caf8310912f54af/sky130A/libs.tech/openlane/sky130_fd_sc_hd/tribuff_map.v' to AST representation.
Generating RTLIL representation for module `\$_TBUF_'.
Successfully finished Verilog frontend.

54.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~3 debug messages>

55. Executing SIMPLEMAP pass (map simple cells to gate primitives).

56. Executing TECHMAP pass (map to technology primitives).

56.1. Executing Verilog-2005 frontend: /home/vboxuser/.volare/volare/sky130/versions/0fe599b2afb6708d281543108caf8310912f54af/sky130A/libs.tech/openlane/sky130_fd_sc_hd/latch_map.v
Parsing Verilog input from `/home/vboxuser/.volare/volare/sky130/versions/0fe599b2afb6708d281543108caf8310912f54af/sky130A/libs.tech/openlane/sky130_fd_sc_hd/latch_map.v' to AST representation.
Generating RTLIL representation for module `\$_DLATCH_P_'.
Generating RTLIL representation for module `\$_DLATCH_N_'.
Successfully finished Verilog frontend.

56.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

57. Executing SIMPLEMAP pass (map simple cells to gate primitives).

58. Executing DFFLIBMAP pass (mapping DFF cells to sequential cells from liberty file).
  cell sky130_fd_sc_hd__dfxtp_2 (noninv, pins=3, area=21.27) is a direct match for cell type $_DFF_P_.
  cell sky130_fd_sc_hd__dfrtp_2 (noninv, pins=4, area=26.28) is a direct match for cell type $_DFF_PN0_.
  cell sky130_fd_sc_hd__dfstp_2 (noninv, pins=4, area=26.28) is a direct match for cell type $_DFF_PN1_.
  cell sky130_fd_sc_hd__dfbbn_2 (noninv, pins=6, area=35.03) is a direct match for cell type $_DFFSR_NNN_.
  final dff cell mappings:
    unmapped dff cell: $_DFF_N_
    \sky130_fd_sc_hd__dfxtp_2 _DFF_P_ (.CLK( C), .D( D), .Q( Q));
    unmapped dff cell: $_DFF_NN0_
    unmapped dff cell: $_DFF_NN1_
    unmapped dff cell: $_DFF_NP0_
    unmapped dff cell: $_DFF_NP1_
    \sky130_fd_sc_hd__dfrtp_2 _DFF_PN0_ (.CLK( C), .D( D), .Q( Q), .RESET_B( R));
    \sky130_fd_sc_hd__dfstp_2 _DFF_PN1_ (.CLK( C), .D( D), .Q( Q), .SET_B( R));
    unmapped dff cell: $_DFF_PP0_
    unmapped dff cell: $_DFF_PP1_
    \sky130_fd_sc_hd__dfbbn_2 _DFFSR_NNN_ (.CLK_N( C), .D( D), .Q( Q), .Q_N(~Q), .RESET_B( R), .SET_B( S));
    unmapped dff cell: $_DFFSR_NNP_
    unmapped dff cell: $_DFFSR_NPN_
    unmapped dff cell: $_DFFSR_NPP_
    unmapped dff cell: $_DFFSR_PNN_
    unmapped dff cell: $_DFFSR_PNP_
    unmapped dff cell: $_DFFSR_PPN_
    unmapped dff cell: $_DFFSR_PPP_

58.1. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).
Mapping DFF cells in module `\ReRAM_Wishbone_Interface':

59. Printing statistics.

=== ReRAM_Wishbone_Interface ===

   Number of wires:                 65
   Number of wire bits:            161
   Number of public wires:          29
   Number of public wire bits:     125
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 38
     $_ANDNOT_                       2
     $_AND_                          1
     $_NAND_                         2
     $_ORNOT_                        1
     $_OR_                          31
     NEUROMORPHIC_X1_macro           1

[INFO]: USING STRATEGY AREA 0

60. Executing ABC pass (technology mapping using ABC).

60.1. Extracting gate netlist of module `\ReRAM_Wishbone_Interface' to `/tmp/yosys-abc-7bjj8h/input.blif'..
Extracted 37 gates and 75 wires to a netlist network with 38 inputs and 1 outputs.

60.1.1. Executing ABC.
Running ABC command: "/build/bin/yosys-abc" -s -f /tmp/yosys-abc-7bjj8h/abc.script 2>&1
ABC: ABC command line: "source /tmp/yosys-abc-7bjj8h/abc.script".
ABC: 
ABC: + read_blif /tmp/yosys-abc-7bjj8h/input.blif 
ABC: + read_lib -w /home/vboxuser/caravel_user_Neuromorphic_X1_32x32/openlane/Neuromorphic_X1_32x32_wb_wrapper/runs/25_08_19_19_24/tmp/synthesis/trimmed.lib 
ABC: Parsing finished successfully.  Parsing time =     0.05 sec
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfbbn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfsbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfstp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfstp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxtp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtp_1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_2".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_8".
ABC: Library "sky130A_merged" from "/home/vboxuser/caravel_user_Neuromorphic_X1_32x32/openlane/Neuromorphic_X1_32x32_wb_wrapper/runs/25_08_19_19_24/tmp/synthesis/trimmed.lib" has 175 cells (17 skipped: 14 seq; 3 tri-state; 0 no func; 0 dont_use).  Time =     0.08 sec
ABC: Memory =    9.54 MB. Time =     0.08 sec
ABC: Warning: Detected 2 multi-output gates (for example, "sky130_fd_sc_hd__fa_1").
ABC: + read_constr -v /home/vboxuser/caravel_user_Neuromorphic_X1_32x32/openlane/Neuromorphic_X1_32x32_wb_wrapper/runs/25_08_19_19_24/tmp/synthesis/synthesis.sdc 
ABC: Setting driving cell to be "sky130_fd_sc_hd__inv_2".
ABC: Setting output load to be 33.442001.
ABC: + read_constr /home/vboxuser/caravel_user_Neuromorphic_X1_32x32/openlane/Neuromorphic_X1_32x32_wb_wrapper/runs/25_08_19_19_24/tmp/synthesis/synthesis.sdc 
ABC: + fx 
ABC: + mfs 
ABC: + strash 
ABC: + drf -l 
ABC: + balance 
ABC: + drw -l 
ABC: + drf -l 
ABC: + balance 
ABC: + drw -l 
ABC: + drw -l -z 
ABC: + balance 
ABC: + drf -l -z 
ABC: + drw -l -z 
ABC: + balance 
ABC: + retime -D -D 25000 -M 5 
ABC: + scleanup 
ABC: Error: The network is combinational.
ABC: + fraig_store 
ABC: + balance 
ABC: + fraig_store 
ABC: + balance 
ABC: + drw -l 
ABC: + drf -l 
ABC: + balance 
ABC: + drw -l 
ABC: + drw -l -z 
ABC: + balance 
ABC: + drf -l -z 
ABC: + drw -l -z 
ABC: + balance 
ABC: + fraig_store 
ABC: + balance 
ABC: + drw -l 
ABC: + drf -l 
ABC: + balance 
ABC: + drw -l 
ABC: + drw -l -z 
ABC: + balance 
ABC: + drf -l -z 
ABC: + drw -l -z 
ABC: + balance 
ABC: + fraig_store 
ABC: + balance 
ABC: + drw -l 
ABC: + drf -l 
ABC: + balance 
ABC: + drw -l 
ABC: + drw -l -z 
ABC: + balance 
ABC: + drf -l -z 
ABC: + drw -l -z 
ABC: + balance 
ABC: + fraig_store 
ABC: + fraig_restore 
ABC: + amap -m -Q 0.1 -F 20 -A 20 -C 5000 
ABC: + retime -D -D 25000 
ABC: + &get -n 
ABC: + &st 
ABC: + &dch 
ABC: + &nf 
ABC: + &put 
ABC: + buffer -N 10 -S 750.0 
ABC: + upsize -D 25000 
ABC: Current delay (2060.05 ps) does not exceed the target delay (25000.00 ps). Upsizing is not performed.
ABC: + dnsize -D 25000 
ABC: + stime -p 
ABC: WireLoad = "none"  Gates =     13 (  0.0 %)   Cap =  2.5 ff (  0.0 %)   Area =      123.87 (100.0 %)   Delay =  2060.05 ps  ( 84.6 %)               
ABC: Path  0 --      27 : 0    1 pi                      A =   0.00  Df =   5.8   -3.8 ps  S =  14.6 ps  Cin =  0.0 ff  Cout =   1.5 ff  Cmax =   0.0 ff  G =    0  
ABC: Path  1 --      40 : 4    1 sky130_fd_sc_hd__or4_2  A =   8.76  Df = 630.7 -537.6 ps  S =  90.7 ps  Cin =  1.5 ff  Cout =   1.5 ff  Cmax = 310.4 ff  G =   95  
ABC: Path  2 --      44 : 4    1 sky130_fd_sc_hd__or4_2  A =   8.76  Df =1308.0-1035.5 ps  S = 106.7 ps  Cin =  1.5 ff  Cout =   4.6 ff  Cmax = 310.4 ff  G =  290  
ABC: Path  3 --      52 : 4    1 sky130_fd_sc_hd__nor4_2 A =  12.51  Df =2060.1-1697.3 ps  S = 824.0 ps  Cin =  4.3 ff  Cout =  33.4 ff  Cmax =  64.1 ff  G =  774  
ABC: Start-point = pi26 (\wbs_adr_i [25]).  End-point = po0 (\functional.EN).
ABC: + print_stats -m 
ABC: netlist                       : i/o =   38/    1  lat =    0  nd =    13  edge =     50  area =123.88  delay = 3.00  lev = 3
ABC: + write_blif /tmp/yosys-abc-7bjj8h/output.blif 

60.1.2. Re-integrating ABC results.
ABC RESULTS:   sky130_fd_sc_hd__or4b_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__nand2_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__or4bb_2 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__or4_2 cells:        8
ABC RESULTS:   sky130_fd_sc_hd__nor4_2 cells:        1
ABC RESULTS:        internal signals:       36
ABC RESULTS:           input signals:       38
ABC RESULTS:          output signals:        1
Removing temp directory.

61. Executing SETUNDEF pass (replace undef values with defined constants).

62. Executing HILOMAP pass (mapping to constant drivers).

63. Executing SPLITNETS pass (splitting up multi-bit signals).

64. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ReRAM_Wishbone_Interface..
Removed 0 unused cells and 75 unused wires.
<suppressed ~1 debug messages>

65. Executing INSBUF pass (insert buffer cells for connected wires).

66. Executing CHECK pass (checking for obvious problems).
Checking module ReRAM_Wishbone_Interface...
Found and reported 0 problems.

67. Printing statistics.

=== ReRAM_Wishbone_Interface ===

   Number of wires:                 46
   Number of wire bits:            142
   Number of public wires:          29
   Number of public wire bits:     125
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 19
     NEUROMORPHIC_X1_macro           1
     sky130_fd_sc_hd__conb_1         5
     sky130_fd_sc_hd__nand2_2        1
     sky130_fd_sc_hd__nor4_2         1
     sky130_fd_sc_hd__or4_2          8
     sky130_fd_sc_hd__or4b_2         1
     sky130_fd_sc_hd__or4bb_2        2

   Area for cell type \NEUROMORPHIC_X1_macro is unknown!

   Chip area for module '\ReRAM_Wishbone_Interface': 142.636800

68. Executing Verilog backend.
Dumping module `\ReRAM_Wishbone_Interface'.

69. Executing JSON backend.

End of script. Logfile hash: e623e49695, CPU: user 0.56s system 0.12s, MEM: 45.25 MB peak
Yosys 0.34 (git sha1 4a1b5599258, gcc 8.3.1 -fPIC -Os)
Time spent: 29% 4x read_liberty (0 sec), 24% 2x abc (0 sec), ...
